# Generated by Django 2.0.1 on 2018-06-23 05:27

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='AppointmentSpec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sunday', models.BooleanField()),
                ('monday', models.BooleanField()),
                ('tuesday', models.BooleanField()),
                ('wednesday', models.BooleanField()),
                ('thursday', models.BooleanField()),
                ('friday', models.BooleanField()),
                ('saturday', models.BooleanField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('all_weeks', models.BooleanField()),
                ('week1', models.BooleanField()),
                ('week2', models.BooleanField()),
                ('week3', models.BooleanField()),
                ('week4', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='LabReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('done', models.BooleanField(default=False)),
                ('blood_sugar_fasting', models.CharField(blank=True, max_length=255, null=True)),
                ('blood_sugar_random', models.CharField(blank=True, max_length=255, null=True)),
                ('blood_sugar_post_prandial', models.CharField(blank=True, max_length=255, null=True)),
                ('serum_urea', models.CharField(blank=True, max_length=255, null=True)),
                ('serum_creatinine', models.CharField(blank=True, max_length=255, null=True)),
                ('serum_cholestrol', models.CharField(blank=True, max_length=255, null=True)),
                ('HDL', models.CharField(blank=True, max_length=255, null=True)),
                ('LDL', models.CharField(blank=True, max_length=255, null=True)),
                ('TC_HDL', models.CharField(blank=True, max_length=255, null=True)),
                ('triglycerides', models.CharField(blank=True, max_length=255, null=True)),
                ('LFT_serum_protein', models.CharField(blank=True, max_length=255, null=True)),
                ('LFT_serum_albumin', models.CharField(blank=True, max_length=255, null=True)),
                ('LFT_serum_globulin', models.CharField(blank=True, max_length=255, null=True)),
                ('LFT_A_G_ratio', models.CharField(blank=True, max_length=255, null=True)),
                ('LFT_total_bilirubin', models.CharField(blank=True, max_length=255, null=True)),
                ('LFT_direct_bilirubin', models.CharField(blank=True, max_length=255, null=True)),
                ('LFT_indirect_bilirubin', models.CharField(blank=True, max_length=255, null=True)),
                ('LFT_SGOT', models.CharField(blank=True, max_length=255, null=True)),
                ('LFT_SGPT', models.CharField(blank=True, max_length=255, null=True)),
                ('alkaline_phosphatase', models.CharField(blank=True, max_length=255, null=True)),
                ('blood_group', models.CharField(blank=True, max_length=255, null=True)),
                ('RH', models.CharField(blank=True, max_length=255, null=True)),
                ('complete_hemogram', models.CharField(blank=True, max_length=255, null=True)),
                ('ESR', models.CharField(blank=True, max_length=255, null=True)),
                ('HB', models.CharField(blank=True, max_length=255, null=True)),
                ('bleeding_time', models.CharField(blank=True, max_length=255, null=True)),
                ('clotting_time', models.CharField(blank=True, max_length=255, null=True)),
                ('blood_sugar_fasting_2', models.CharField(blank=True, max_length=255, null=True)),
                ('blood_sugar_post_prandial_2', models.CharField(blank=True, max_length=255, null=True)),
                ('blood_sugar_random_2', models.CharField(blank=True, max_length=255, null=True)),
                ('uric_acid', models.CharField(blank=True, max_length=255, null=True)),
                ('MP', models.CharField(blank=True, max_length=255, null=True)),
                ('widal', models.CharField(blank=True, max_length=255, null=True)),
                ('albumin', models.CharField(blank=True, max_length=255, null=True)),
                ('sugar', models.CharField(blank=True, max_length=255, null=True)),
                ('bile_salts', models.CharField(blank=True, max_length=255, null=True)),
                ('bile_pigments', models.CharField(blank=True, max_length=255, null=True)),
                ('microscopy', models.CharField(blank=True, max_length=255, null=True)),
                ('ova', models.CharField(blank=True, max_length=255, null=True)),
                ('cyst', models.CharField(blank=True, max_length=255, null=True)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Doctor')),
            ],
        ),
        migrations.CreateModel(
            name='LoggedUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PatientHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indication', models.CharField(max_length=255)),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treatment_history', to='api.Doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'MALE'), ('F', 'FEMALE'), ('O', 'OTHER')], max_length=1, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('guardian_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('local_address', models.TextField(blank=True, null=True)),
                ('permanent_address', models.TextField(blank=True, null=True)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3, null=True)),
                ('patient_type', models.CharField(blank=True, choices=[('S', 'STUDENT'), ('E', 'EMPLOYEE'), ('D', 'DEPENDANT')], max_length=1, null=True)),
                ('retired', models.NullBooleanField(default=False)),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Course')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.Department')),
                ('patron', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Person')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('BO', 'BOOKED'), ('WL', 'WAITING_LIST'), ('BC', 'BOOKED_CONFIRMED')], max_length=2)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='api.Appointment')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Person')),
            ],
        ),
        migrations.CreateModel(
            name='WaitingRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.IntegerField()),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Doctor')),
                ('guest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Guest')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Person')),
            ],
        ),
        migrations.AddField(
            model_name='patienthistory',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_history', to='api.Person'),
        ),
        migrations.AddField(
            model_name='labreport',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Person'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='person',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Person'),
        ),
        migrations.AddField(
            model_name='appointmentspec',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Doctor'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Doctor'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='spec',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.AppointmentSpec'),
        ),
    ]
